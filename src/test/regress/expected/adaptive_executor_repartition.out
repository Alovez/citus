CREATE SCHEMA adaptive_executor;
SET search_path TO adaptive_executor;
SET citus.task_executor_type to 'adaptive';
SET citus.shard_replication_factor to 1;
SET citus.enable_repartition_joins TO true;
CREATE TABLE ab(a int, b int);
SELECT create_distributed_table('ab', 'a');
 create_distributed_table 
--------------------------
 
(1 row)

INSERT INTO ab SELECT *,* FROM generate_series(1,10);
SELECT COUNT(*) FROM ab k, ab l 
WHERE k.a = l.b; 
 count 
-------
    10
(1 row)

SELECT COUNT(*) FROM ab k, ab l, ab m, ab t 
WHERE k.a = l.b AND k.a = m.b AND t.b = l.a; 
 count 
-------
    10
(1 row)

SELECT count(*) FROM (SELECT k.a FROM ab k, ab l WHERE k.a = l.b) first, (SELECT * FROM ab) second WHERE first.a = second.b;
 count 
-------
    10
(1 row)

BEGIN;
SELECT count(*) FROM (SELECT k.a FROM ab k, ab l WHERE k.a = l.b) first, (SELECT * FROM ab) second WHERE first.a = second.b;
 count 
-------
    10
(1 row)

SELECT count(*) FROM (SELECT k.a FROM ab k, ab l WHERE k.a = l.b) first, (SELECT * FROM ab) second WHERE first.a = second.b;
 count 
-------
    10
(1 row)

SELECT count(*) FROM (SELECT k.a FROM ab k, ab l WHERE k.a = l.b) first, (SELECT * FROM ab) second WHERE first.a = second.b;
 count 
-------
    10
(1 row)

ROLLBACK;
BEGIN;
INSERT INTO ab values(1, 2);
-- DDL happened before repartition query in a transaction block, so this should error.
SELECT count(*) FROM (SELECT k.a FROM ab k, ab l WHERE k.a = l.b) first, (SELECT * FROM ab) second WHERE first.a = second.b;
ERROR:  cannot open new connections after the first modification command within a transaction
ROLLBACK;
DROP SCHEMA adaptive_executor CASCADE;
NOTICE:  drop cascades to table ab
