-- This tests file includes tests for coordinator tables.
SET citus.next_shard_id TO 1504000;
SET citus.shard_replication_factor TO 1;
SET citus.enable_local_execution TO ON;
SET citus.log_local_commands TO ON;
CREATE SCHEMA coordinator_tables_test_schema;
SET search_path TO coordinator_tables_test_schema;
---------------------------------------------------------------------
------- coordinator table creation -------
---------------------------------------------------------------------
-- ensure that coordinator is added to pg_dist_node
SET client_min_messages to ERROR;
SELECT 1 FROM master_add_node('localhost', :master_port, groupId => 0);
 ?column?
---------------------------------------------------------------------
        1
(1 row)

RESET client_min_messages;
CREATE TABLE coordinator_table_1 (a int);
-- this should work as coordinator is added to pg_dist_node
SELECT create_coordinator_table('coordinator_table_1');
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1504000, 'coordinator_tables_test_schema', 'CREATE TABLE coordinator_tables_test_schema.coordinator_table_1 (a integer)');SELECT worker_apply_shard_ddl_command (1504000, 'coordinator_tables_test_schema', 'ALTER TABLE coordinator_tables_test_schema.coordinator_table_1 OWNER TO postgres')
 create_coordinator_table
---------------------------------------------------------------------

(1 row)

-- try to remove coordinator and observe failure as there exist a coordinator table
SELECT 1 FROM master_remove_node('localhost', :master_port);
ERROR:  you cannot remove the primary node of a node group which has shard placements
DROP TABLE coordinator_table_1;
NOTICE:  executing the command locally: DROP TABLE IF EXISTS coordinator_tables_test_schema.coordinator_table_1_xxxxx CASCADE
CONTEXT:  SQL statement "SELECT master_drop_all_shards(v_obj.objid, v_obj.schema_name, v_obj.object_name)"
PL/pgSQL function citus_drop_trigger() line 19 at PERFORM
-- this should work
SELECT 1 FROM master_remove_node('localhost', :master_port);
 ?column?
---------------------------------------------------------------------
        1
(1 row)

CREATE TABLE coordinator_table_1 (a int);
-- this should fail as coordinator is removed from pg_dist_node
SELECT create_coordinator_table('coordinator_table_1');
ERROR:  cannot create coordinator table "coordinator_table_1", coordinator tables can only be created from coordinator node if it is added to pg_dist_node
-- let coordinator have coordinator tables again for next tests
set client_min_messages to ERROR;
SELECT 1 FROM master_add_node('localhost', :master_port, groupId => 0);
 ?column?
---------------------------------------------------------------------
        1
(1 row)

RESET client_min_messages;
-- creating coordinator table having no data initially would work
SELECT create_coordinator_table('coordinator_table_1');
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1504001, 'coordinator_tables_test_schema', 'CREATE TABLE coordinator_tables_test_schema.coordinator_table_1 (a integer)');SELECT worker_apply_shard_ddl_command (1504001, 'coordinator_tables_test_schema', 'ALTER TABLE coordinator_tables_test_schema.coordinator_table_1 OWNER TO postgres')
 create_coordinator_table
---------------------------------------------------------------------

(1 row)

-- creating coordinator table having data in it would also work
CREATE TABLE coordinator_table_2(a int);
INSERT INTO coordinator_table_2 VALUES(1);
SELECT create_coordinator_table('coordinator_table_2');
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1504002, 'coordinator_tables_test_schema', 'CREATE TABLE coordinator_tables_test_schema.coordinator_table_2 (a integer)');SELECT worker_apply_shard_ddl_command (1504002, 'coordinator_tables_test_schema', 'ALTER TABLE coordinator_tables_test_schema.coordinator_table_2 OWNER TO postgres')
NOTICE:  executing the copy locally for shard xxxxx
NOTICE:  Copying data from local table...
 create_coordinator_table
---------------------------------------------------------------------

(1 row)

-- cannot create coordinator table from an existing citus table
CREATE TABLE distributed_table (a int);
SELECT create_distributed_table('distributed_table', 'a');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

-- this will error out
SELECT create_coordinator_table('distributed_table');
ERROR:  table "distributed_table" is already distributed
-- partitiond table tests --
CREATE TABLE partitioned_table(a int, b int) PARTITION BY RANGE (a);
CREATE TABLE partitioned_table_1 PARTITION OF partitioned_table FOR VALUES FROM (0) TO (10);
CREATE TABLE partitioned_table_2 PARTITION OF partitioned_table FOR VALUES FROM (10) TO (20);
-- cannot create partitioned coordinator tables
SELECT create_coordinator_table('partitioned_table');
ERROR:  distributing partitioned tables in only supported for hash-distributed tables
-- cannot create coordinator tables as a partition of a local table
BEGIN;
  CREATE TABLE coordinator_table PARTITION OF partitioned_table FOR VALUES FROM (20) TO (30);
  -- this should fail
  SELECT create_coordinator_table('coordinator_table');
ERROR:  cannot distribute relation "coordinator_table" which is partition of "partitioned_table"
DETAIL:  Citus does not support distributing partitions if their parent is not distributed table.
HINT:  Distribute the partitioned table "partitioned_table" instead.
ROLLBACK;
-- cannot create coordinator tables as a partition of a local table
-- via ALTER TABLE commands as well
BEGIN;
  CREATE TABLE coordinator_table (a int, b int);
  SELECT create_coordinator_table('coordinator_table');
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1504007, 'coordinator_tables_test_schema', 'CREATE TABLE coordinator_tables_test_schema.coordinator_table (a integer, b integer)');SELECT worker_apply_shard_ddl_command (1504007, 'coordinator_tables_test_schema', 'ALTER TABLE coordinator_tables_test_schema.coordinator_table OWNER TO postgres')
 create_coordinator_table
---------------------------------------------------------------------

(1 row)

  -- this should fail
  ALTER TABLE partitioned_table ATTACH PARTITION coordinator_table FOR VALUES FROM (20) TO (30);
ERROR:  non-distributed tables cannot have distributed partitions
HINT:  Distribute the partitioned table "coordinator_table" instead
ROLLBACK;
-- cannot attach coordinator tables to a partitioned distributed table
BEGIN;
  SELECT create_distributed_table('partitioned_table', 'a');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

  CREATE TABLE coordinator_table (a int, b int);
  SELECT create_coordinator_table('coordinator_table');
NOTICE:  executing the command locally: SELECT worker_apply_shard_ddl_command (1504020, 'coordinator_tables_test_schema', 'CREATE TABLE coordinator_tables_test_schema.coordinator_table (a integer, b integer)');SELECT worker_apply_shard_ddl_command (1504020, 'coordinator_tables_test_schema', 'ALTER TABLE coordinator_tables_test_schema.coordinator_table OWNER TO postgres')
 create_coordinator_table
---------------------------------------------------------------------

(1 row)

  -- this should fail
  ALTER TABLE partitioned_table ATTACH PARTITION coordinator_table FOR VALUES FROM (20) TO (30);
ERROR:  distributed tables cannot have non-colocated distributed tables as a partition
ROLLBACK;
-- cleanup at exit
DROP SCHEMA coordinator_tables_test_schema CASCADE;
NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to table coordinator_table_1
drop cascades to table coordinator_table_1_1504001
drop cascades to table coordinator_table_2
drop cascades to table coordinator_table_2_1504002
drop cascades to table distributed_table
drop cascades to table partitioned_table
